<Window x:Class="GocdTray.Ui.View.ConnectionInfoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GocdTray.Ui.View"
        xmlns:code="clr-namespace:GocdTray.Ui.Code"
        xmlns:converters="clr-namespace:GocdTray.Ui.Converters"
        mc:Ignorable="d"
        Title="Connection Info" Width="600" SizeToContent="Height" ResizeMode="NoResize" ShowInTaskbar="False">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="Auto" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasErrors}" Value="False">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="4"/> <!-- empty row for padding -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0">Go.cd Api Url</Label>
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GocdApiUri, Mode=TwoWay}"/>
        <Label Grid.Row="1" Grid.Column="0">Go.cd Website Url</Label>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding GocdWebUri, Mode=TwoWay}"/>
        <Label Grid.Row="2" Grid.Column="0">Username</Label>
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Username, Mode=TwoWay}"/>
        <Label Grid.Row="3" Grid.Column="0">Password</Label>
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Password, Mode=TwoWay}"/>
        <PasswordBox Grid.Row="3" Grid.Column="1" code:PasswordBoxWithBinding.BindPassword="True" code:PasswordBoxWithBinding.BoundPassword="{Binding Password, Mode=TwoWay}"/>
        <Label Grid.Row="4" Grid.Column="0">Ignore Certificate Errors</Label>
        <CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding IgnoreCertificateErrors, Mode=TwoWay}" VerticalAlignment="Center"/>
        <Label Grid.Row="5" Grid.Column="0">Polling Interval (seconds)</Label>
        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding PollingIntervalSeconds, Mode=TwoWay}" PreviewTextInput="ValidateInt"/>
        <TextBlock Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding ErrorMessage}" Foreground="{StaticResource TextColorError}" TextWrapping="Wrap" />
        <StackPanel Grid.Row="8" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
            <Button  Command="{Binding TestConnection}" Content="Test Connection" Width="120" Height="28" />
            <Image Tag="{Binding TestConnectionState}" Width="24" Height="24">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger  Binding="{Binding TestConnectionState}" Value="{x:Static code:TestConnectionState.Passed}">
                                <Setter Property="Source" Value="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource ColorPassed}}"/>
                            </DataTrigger>
                            <DataTrigger  Binding="{Binding TestConnectionState}" Value="{x:Static code:TestConnectionState.Failed}">
                                <Setter Property="Source" Value="{converters:ImageFromFont Text={StaticResource IconTimes}, Brush={StaticResource ColorFailed}}"/>
                            </DataTrigger>
                            <DataTrigger  Binding="{Binding TestConnectionState}" Value="{x:Static code:TestConnectionState.Running}">
                                <Setter Property="Source" Value="{converters:ImageFromFont Text={StaticResource IconSpinner}, Brush={StaticResource ColorBuilding}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </StackPanel>
        <StackPanel Grid.Row="8" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Command="{Binding OkClick}" Content="OK" Width="70" Height="28" HorizontalAlignment="Right" Margin="0,0,10,0"/>
            <Button Command="{Binding CancelClick}" Content="Cancel" Width="70" Height="28" HorizontalAlignment="Right"/>
        </StackPanel>
    </Grid>
</Window>
