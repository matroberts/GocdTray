<!-- These are default values to give a consistent look and feel -->
<ResourceDictionary x:Class="GocdTray.Ui.View.WindowStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:GocdTray.Ui.Converters">



    <!-- font awesome -->
    <FontFamily x:Key="FontAwesome">/GocdTray.Ui;Component/Fonts/FontAwesome.otf#Font Awesome 5 Free Solid</FontFamily>
    <System:String x:Key="IconSquare">&#xf0c8;</System:String>
    <System:String x:Key="IconCheckSquare">&#xf14a;</System:String>
    <System:String x:Key="IconSortAmountDown">&#xf160;</System:String>
    <System:String x:Key="IconHeart">&#xf004;</System:String>
    <System:String x:Key="IconCheck">&#xf00c;</System:String>
    <System:String x:Key="IconTimes">&#xf00d;</System:String>
    <System:String x:Key="IconSpinner">&#xf110;</System:String>
    <System:String x:Key="IconPause">&#xf04c;</System:String>
    <System:String x:Key="IconAngleRight">&#xf105;</System:String>
    <System:String x:Key="IconAngleDown">&#xf107;</System:String>
    <!-- segoe-ui-symbol-font -->
    <System:String x:Key="WinChromeClose">&#xE8BB;</System:String>


    <SolidColorBrush x:Key="TextColorPrimary" Color="#FAFAFA" />
    <SolidColorBrush x:Key="TextColorSecondary" Color="#AEAEAE" />
    <SolidColorBrush x:Key="TextColorError" Color="#E81123" />
    <SolidColorBrush x:Key="BackgroundColorPrimary" Color="#282C31" />
    <SolidColorBrush x:Key="BackgroundColorSecondary" Color="#565A5F" />
    <SolidColorBrush x:Key="BackgroundColorHighlight" Color="#373B40" />
    <SolidColorBrush x:Key="CloseWindowButtonHoverColor" Color="#E81123" />
    <!-- Note that these color are also "hard coded" in the icons for the app -->
    <SolidColorBrush x:Key="BuildingColor" Color="#FFD800" />
    <SolidColorBrush x:Key="PassedColor" Color="#009900" />
    <SolidColorBrush x:Key="FailedColor" Color="#FF0000" />
    <SolidColorBrush x:Key="NotConnectedColor" Color="#AEAEAE" />

    <!-- ################### -->
    <!--      Converters     -->
    <!-- ################### -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:PipelineSortOrderToSelectedOptionConverter x:Key="PipelineSortOrderToSelectedOptionConverter" />

    <!-- ################### -->
    <!--       Controls      -->
    <!-- ################### -->
    <Style TargetType="{x:Type Control}" x:Key="BaseStyle">
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackgroundColorPrimary}"></Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundColorPrimary}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource BackgroundColorSecondary}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundColorHighlight}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColorSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1, 1, 1, 1"/> 
    </Style>

    <Style TargetType="PasswordBox" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColorSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1, 1, 1, 1"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{converters:ImageFromFont Text={StaticResource IconSquare}, Brush={StaticResource BackgroundColorSecondary}}" Width="22"/>
                        <!-- second image on top of first-->
                        <Image x:Name="iconCheck" Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource TextColorPrimary}}" Width="18"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="iconCheck" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="iconCheck" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{StaticResource BackgroundColorPrimary}" BorderThickness="1" BorderBrush="{StaticResource BackgroundColorPrimary}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem" >
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColorPrimary}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd" Padding="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" x:Name="IconPresenter"     Margin="0, 0, 5, 0"  ContentSource="Icon"   RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"  Margin="0, 0, 10, 0"  ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BackgroundColorHighlight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ########################### -->
    <!--      Window Chrome          -->
    <!-- ########################### -->
    <Style x:Key="CloseWindowButton" TargetType="Button">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Background"  Value="{StaticResource BackgroundColorPrimary}"/>
        <Setter Property="Foreground"  Value="{StaticResource TextColorPrimary}"/>
        <Setter Property="Width"  Value="46"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"  Value="True"/>
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="{StaticResource WinChromeClose}" FontFamily="Segoe MDL2 Assets" Foreground="{StaticResource TextColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="PART_Content" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseWindowButtonHoverColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30" CornerRadius="0" GlassFrameThickness="0" NonClientFrameEdges="None" ResizeBorderThickness="8" UseAeroCaptionButtons="False"  />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{StaticResource BackgroundColorPrimary}" BorderBrush="{StaticResource BackgroundColorPrimary}" BorderThickness="5, 30, 5, 5">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>
                        <Grid Height="30" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock  Grid.Column="0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Foreground="{StaticResource TextColorPrimary}" Text="{TemplateBinding Title}"/>
                            <Button Grid.Column="1" x:Name="btnClose" Style="{StaticResource CloseWindowButton}" Click="CloseClick" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- ########################### -->
    <!--          Data Grid          -->
    <!-- ########################### -->

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource BackgroundColorPrimary}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="None" />
        <Setter Property="RowHeaderWidth" Value="0" /> 
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource BackgroundColorPrimary}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource BackgroundColorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <!-- This makes selection invisible, so only get the mouse over effect -->
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ########################### -->
    <!--         Scroll Bar          -->
    <!-- ########################### -->

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource BackgroundColorPrimary}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="0" Background="{StaticResource BackgroundColorSecondary}" BorderThickness="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="Transparent" />
            <Track Name="PART_Track" Grid.Row="0" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="Transparent" BorderBrush="Transparent" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="Transparent" />
            <Track Name="PART_Track" Grid.Column="0" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="Transparent" BorderBrush="Transparent" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>