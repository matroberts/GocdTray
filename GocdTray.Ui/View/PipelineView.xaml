<Window x:Class="GocdTray.Ui.View.PipelineView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:GocdTray.Ui.Converters"
        xmlns:code="clr-namespace:GocdTray.Ui.Code"
        Title="Dashboard" Height="600" Width="350" ShowInTaskbar="False">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Click="Button_Click" ContextMenuService.IsEnabled="False" Width="40" Height="Auto" HorizontalAlignment="Left"  BorderThickness="0">
            <TextBlock FontFamily="{StaticResource FontAwesome}" FontSize="16" Text="{StaticResource IconSortAmountDown}" />
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem  Header="Build Status" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.BuildStatus}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.BuildStatus}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="A-Z" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.AtoZ}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.AtoZ}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Z-A" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.ZtoA}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.ZtoA}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <DataGrid x:Name="PipelineGrid" Grid.Row="1" ItemsSource="{Binding Pipelines}" SelectedItem="{Binding SelectedItem}" SelectionMode="Single" SelectionUnit="FullRow" IsTabStop="True" AutoGenerateColumns="False" IsReadOnly="True" >
            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding OpenInBrowserCommand}" CommandParameter="{Binding ElementName=PipelineGrid, Path=SelectedItem}"/>
            </DataGrid.InputBindings>

            <DataGrid.Columns>
                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Paused, Converter={StaticResource PipelineIcon}}" FontFamily="{StaticResource FontAwesome}" Foreground="{Binding Status, Converter={StaticResource PipelineStatusToColorConverter}}" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center" Width="15"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn IsReadOnly="True"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" FontSize="15">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Paused}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource TextColorSecondary}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
