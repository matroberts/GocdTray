<Window x:Class="GocdTray.Ui.View.PipelineView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:GocdTray.Ui.Converters"
        xmlns:code="clr-namespace:GocdTray.Ui.Code"
        xmlns:abstractions="clr-namespace:GocdTray.App.Abstractions;assembly=GocdTray.App.Abstractions"
        Title="Dashboard" Height="600" Width="370" ShowInTaskbar="False">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Click="Button_Click" ContextMenuService.IsEnabled="False" Width="40" Height="Auto" HorizontalAlignment="Left"  BorderThickness="0">
            <TextBlock FontFamily="{StaticResource FontAwesome}" FontSize="16" Text="{StaticResource IconSortAmountDown}" />
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem  Header="Build Status" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.BuildStatus}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.BuildStatus}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="A-Z" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.AtoZ}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.AtoZ}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Z-A" Command="{Binding SortCommand}" CommandParameter="{x:Static code:PipelineSortOrder.ZtoA}">
                        <MenuItem.Icon>
                            <Image Source="{converters:ImageFromFont Text={StaticResource IconCheck}, Brush={StaticResource PassedColor}}" Visibility="{Binding PipelineSortOrder, Converter={StaticResource PipelineSortOrderToSelectedOptionConverter}, ConverterParameter={x:Static code:PipelineSortOrder.ZtoA}}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <DataGrid x:Name="PipelineGrid" Grid.Row="1" ItemsSource="{Binding Pipelines}" SelectedItem="{Binding SelectedItem}" SelectionMode="Single" SelectionUnit="FullRow" IsTabStop="True" AutoGenerateColumns="False" IsReadOnly="True">
            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding OpenInBrowserCommand}" CommandParameter="{Binding ElementName=PipelineGrid, Path=SelectedItem}"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="DetailsVisibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                            <Setter Property="DetailsVisibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn  FontFamily="{StaticResource FontAwesome}" FontSize="15" Width="18" MinWidth="1"><!-- The MinWidth=1 is important, if its not set to a non zero number you cant make the column narrow enough.-->
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Text" Value="{StaticResource IconSquare}"/>
                            <Style.Triggers>
                                <!-- Icon -->
                                <DataTrigger Binding="{Binding Paused}" Value="True">
                                    <Setter Property="Text" Value="{StaticResource IconPause}"/>
                                </DataTrigger>
                                <!-- Color -->
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:PipelineStatus.Building}">
                                    <Setter Property="Foreground" Value="{StaticResource BuildingColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:PipelineStatus.Passed}">
                                    <Setter Property="Foreground" Value="{StaticResource PassedColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:PipelineStatus.Failed}">
                                    <Setter Property="Foreground" Value="{StaticResource FailedColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Name}" FontSize="15" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{StaticResource TextColorPrimary}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Paused}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource TextColorSecondary}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=DataContext.ToggleDetailsVisibilityCommand, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" BorderThickness="0" Background="Transparent">
                                <TextBlock  FontFamily="{StaticResource FontAwesome}" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" Width="18" Foreground="{StaticResource TextColorSecondary}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="{StaticResource IconAngleRight}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                    <Setter Property="Text" Value="{StaticResource IconAngleDown}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding PausedText}" Foreground="{StaticResource TextColorPrimary}" FontSize="15">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Paused}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <ItemsControl ItemsSource="{Binding PipelineInstances}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding DisplayText}" Foreground="{StaticResource TextColorPrimary}" FontSize="15"/>
                                        <ItemsControl ItemsSource="{Binding Stages}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Rows="1" Margin="0, 0, 10, 0"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Height="10" BorderThickness="0" Margin="0, 8, 8, 8" CornerRadius="1">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Background" Value="{StaticResource NotConnectedColor}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:StageStatus.Building}">
                                                                        <Setter Property="Background" Value="{StaticResource BuildingColor}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:StageStatus.Passed}">
                                                                        <Setter Property="Background" Value="{StaticResource PassedColor}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:StageStatus.Failed}">
                                                                        <Setter Property="Background" Value="{StaticResource FailedColor}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static abstractions:StageStatus.Cancelled}">
                                                                        <Setter Property="Background" Value="{StaticResource FailedColor}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</Window>
